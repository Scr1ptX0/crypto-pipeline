services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  project-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_pass
      POSTGRES_DB: crypto_db
    volumes:
      - project_postgres_volume:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always

  airflow:
    image: apache/airflow:2.8.1-python3.11
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: p3OkvycVNiK5MbGlAPI-x5hddqjs_GXU51KJh44q38E=
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'your-secret-key-here'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db migrate &&
      airflow users create --username airflow --firstname Admin --lastname User --role Admin --email admin@example.com --password airflow &&
      exec airflow standalone
      "
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

volumes:
  postgres_db_volume:
  project_postgres_volume: